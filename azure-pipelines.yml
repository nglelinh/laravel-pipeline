# PHP
# Test and package your PHP project.
# Add steps that run tests, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/php

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  phpVersion: 7.4

steps:
- script: |
    sudo update-alternatives --set php /usr/bin/php$(phpVersion)
    sudo update-alternatives --set phar /usr/bin/phar$(phpVersion)
    sudo update-alternatives --set phpdbg /usr/bin/phpdbg$(phpVersion)
    sudo update-alternatives --set php-cgi /usr/bin/php-cgi$(phpVersion)
    sudo update-alternatives --set phar.phar /usr/bin/phar.phar$(phpVersion)
    php -version
  displayName: 'Use PHP version $(phpVersion)'

- script: |
   cp .env.azure.example .env
  displayName: 'Environment Setup'

- script: |
    sudo composer self-update
    composer install --no-interaction --prefer-dist --no-suggest
    composer --version
  displayName: 'Installing Package Dependencies'

- script: |
    php artisan key:generate
  displayName: 'Setup app keys'

- script: |
    vendor/bin/phpunit tests/Unit
  displayName: 'Running Unit Tests'

# Publish Test Results to Azure Pipelines/TFS
- task: PublishTestResults@2
  inputs:
    testRunner: 'JUnit' # Options: JUnit, NUnit, VSTest, xUnit
    testResultsFiles: '**/TEST-*.xml'
    searchFolder: '$(System.DefaultWorkingDirectory)/build/TestResults' # Optional
    mergeTestResults: false # Optional
    #testRunTitle: # Optional
    #buildPlatform: # Optional
    #buildConfiguration: # Optional
    #publishRunAttachments: true # Optional
  condition: always()

# Publish code coverage results
# Publish Cobertura or JaCoCo code coverage results from a build
- task: PublishCodeCoverageResults@1
  inputs:
    #codeCoverageTool: 'JaCoCo' # Options: cobertura, jaCoCo
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/build/logs/clover.xml'
    #pathToSources: '$(System.DefaultWorkingDirectory)/app'
    reportDirectory: '$(System.DefaultWorkingDirectory)/build/coverage'
    #additionalCodeCoverageFiles: # Optional
    #failIfCoverageEmpty: false # Optional
